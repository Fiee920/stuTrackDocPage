import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.DXbSjDf2.js";const F=JSON.parse('{"title":"Nginx环境配置","description":"","frontmatter":{},"headers":[],"relativePath":"article/environment/nginx.md","filePath":"article/environment/nginx.md"}'),l={name:"article/environment/nginx.md"},e=n(`<h1 id="nginx环境配置" tabindex="-1">Nginx环境配置 <a class="header-anchor" href="#nginx环境配置" aria-label="Permalink to &quot;Nginx环境配置&quot;">​</a></h1><p>基于CentOS7做命令演示，根据实际使用的Linux发行版灵活调整。</p><h2 id="_1-linux联网状态下-直接下载安装包" tabindex="-1"><strong>1.Linux联网状态下，直接下载安装包</strong> <a class="header-anchor" href="#_1-linux联网状态下-直接下载安装包" aria-label="Permalink to &quot;**1.Linux联网状态下，直接下载安装包**&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://nginx.org/download/nginx-1.24.0.tar.gz</span></span></code></pre></div><p>官网：<a href="https://nginx.org/en/download.html" target="_blank" rel="noreferrer">https://nginx.org/en/download.html</a></p><p>如果没有wget命令，可以执行<code>yum install -y wget</code>（centOS下）</p><h2 id="_2-安装nginx相关依赖" tabindex="-1"><strong>2.安装Nginx相关依赖</strong> <a class="header-anchor" href="#_2-安装nginx相关依赖" aria-label="Permalink to &quot;**2.安装Nginx相关依赖**&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-c++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	zlib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zlib-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pcre</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pcre-devel</span></span></code></pre></div><h2 id="_3-安装nginx" tabindex="-1"><strong>3.安装Nginx</strong> <a class="header-anchor" href="#_3-安装nginx" aria-label="Permalink to &quot;**3.安装Nginx**&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx-1.24.0.tar.gz</span></span></code></pre></div><h2 id="进入其目录" tabindex="-1">进入其目录 <a class="header-anchor" href="#进入其目录" aria-label="Permalink to &quot;进入其目录&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/nginx-1.24.0</span></span></code></pre></div><p>执行配置脚本</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#执行配置脚本 --prefix是指定安装目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix=/usr/local/nginx/nginx-1.24.0</span></span></code></pre></div><p>如果遇到报错“./configure: error: C compiler cc is not found”，解决方案：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-c++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autoconf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> automake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="_4-相关命令" tabindex="-1"><strong>4.相关命令</strong> <a class="header-anchor" href="#_4-相关命令" aria-label="Permalink to &quot;**4.相关命令**&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#启动脚本是在</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># /usr/local/nginx/sbin/nginx</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#启动,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/local/nginx/sbin/nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/nginx/conf/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/local/nginx/sbin/nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#重载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/local/nginx/sbin/nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#杀掉nginx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/local/nginx/sbin/nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quit</span></span></code></pre></div><h2 id="_5-查询nginx是否启动" tabindex="-1"><strong>5.查询Nginx是否启动</strong> <a class="header-anchor" href="#_5-查询nginx是否启动" aria-label="Permalink to &quot;**5.查询Nginx是否启动**&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre></div><h2 id="_6-配置防火墙" tabindex="-1"><strong>6.配置防火墙</strong> <a class="header-anchor" href="#_6-配置防火墙" aria-label="Permalink to &quot;**6.配置防火墙**&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看已放行的端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list-all</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#将80端口加入到防火墙放行白名单中，并重载防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-port=80/tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permanent</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firewall-cmd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --reload</span></span></code></pre></div><p>关闭防火墙：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#临时关闭防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#永久关闭防火墙</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firewalld.service</span></span></code></pre></div><h2 id="_7-设置nginx的开机启动" tabindex="-1"><strong>7.设置Nginx的开机启动</strong> <a class="header-anchor" href="#_7-设置nginx的开机启动" aria-label="Permalink to &quot;**7.设置Nginx的开机启动**&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/rc.local</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">文本底部追加</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/local/nginx/sbin/nginx</span></span></code></pre></div><h2 id="_8-nginx介绍" tabindex="-1"><strong>8.Nginx介绍</strong> <a class="header-anchor" href="#_8-nginx介绍" aria-label="Permalink to &quot;**8.Nginx介绍**&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#找到nginx的配置文件，编辑</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/nginx/conf/nginx.conf</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#这里放置的是nginx默认显示的页面</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/nginx/html/</span></span></code></pre></div><h2 id="_9-停止nginx" tabindex="-1"><strong>9.停止Nginx</strong> <a class="header-anchor" href="#_9-停止nginx" aria-label="Permalink to &quot;**9.停止Nginx**&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 强制停止nginx命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 优雅停止nginx命令，等最后一次交互执行完毕再停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> quit</span></span></code></pre></div><h2 id="_10-启动脚本在nginx-sbin目录下" tabindex="-1"><strong>10.启动脚本在nginx/sbin目录下</strong> <a class="header-anchor" href="#_10-启动脚本在nginx-sbin目录下" aria-label="Permalink to &quot;**10.启动脚本在nginx/sbin目录下**&quot;">​</a></h2><h2 id="_11-云服务器商ecs安全组新增入站规则放行" tabindex="-1"><strong>11.云服务器商ECS安全组新增入站规则放行</strong> <a class="header-anchor" href="#_11-云服务器商ecs安全组新增入站规则放行" aria-label="Permalink to &quot;**11.云服务器商ECS安全组新增入站规则放行**&quot;">​</a></h2><h2 id="_12-问题解决" tabindex="-1">12.问题解决 <a class="header-anchor" href="#_12-问题解决" aria-label="Permalink to &quot;12.问题解决&quot;">​</a></h2><h3 id="_12-1解决没有sbin目录" tabindex="-1"><strong>12.1解决没有sbin目录</strong> <a class="header-anchor" href="#_12-1解决没有sbin目录" aria-label="Permalink to &quot;**12.1解决没有sbin目录**&quot;">​</a></h3><p>在解压后的目录那，执行<code>make &amp; make install</code></p><h3 id="_12-2报错解决" tabindex="-1"><strong>12.2报错解决</strong> <a class="header-anchor" href="#_12-2报错解决" aria-label="Permalink to &quot;**12.2报错解决**&quot;">​</a></h3><p>13.1:[error] open() “/usr/local/nginx/logs/nginx.pid“ failed (2: No such file or directory)</p><p>查询nginx的pid</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre></div><p>在nginx-1.x.x的目录下，新建logs目录（有的话忽略），然后新建nginx.pid文件，文件内容为刚才的pid</p><p><code>错误原因：</code></p><p>nginx重新启动或者重新加载配置文件报错</p>`,43),t=[e];function h(p,k,r,d,g,o){return a(),i("div",null,t)}const u=s(l,[["render",h]]);export{F as __pageData,u as default};
